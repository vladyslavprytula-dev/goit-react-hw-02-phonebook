{"version":3,"sources":["Components/Contacts/ContactsEditor.js","Components/ContactsList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["ContactsEditor","state","name","phone","handleChange","property","e","setState","target","value","handleSubmit","preventDefault","props","onAddContacts","onSubmit","this","onChange","pattern","type","Component","ContactList","contacts","onDeleteContact","length","map","id","key","onClick","defaultProps","Filter","onChangeFilter","placeholder","onLeaveFeedback","App","filter","addPhone","Contact","uuidv4","some","contact","alert","prevState","deleteContact","ContactId","changeFilter","getVisibleTask","toLowerCase","includes","visibleTasks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAuCeA,E,4MApCbC,MAAQ,CACNC,KAAM,GACNC,MAAO,I,EAETC,aAAe,SAACC,GACd,OAAO,SAACC,GACN,EAAKC,SAAL,eAAiBF,EAAWC,EAAEE,OAAOC,U,EAGzCC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKC,MAAMC,cAAc,EAAKZ,MAAMC,KAAM,EAAKD,MAAME,OAErD,EAAKI,SAAS,CAAEL,KAAM,GAAIC,MAAO,M,uDAGjC,OACE,0BAAMW,SAAUC,KAAKL,cAArB,OAEE,2BACED,MAAOM,KAAKd,MAAMC,KAClBc,SAAUD,KAAKX,aAAa,UAJhC,QAOE,2BACEK,MAAOM,KAAKd,MAAME,MAClBc,QAAQ,6BACRD,SAAUD,KAAKX,aAAa,WAE9B,4BAAQc,KAAK,UAAb,oB,GA/BqBC,aCCvBC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oCACGD,EAASE,OAAS,WAAa,KAChC,4BACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACZ,wBAAIuB,IAAKD,GACP,2BACGvB,EADH,IACUC,GAGV,4BAAQe,KAAK,SAASS,QAAS,kBAAML,EAAgBG,KAArD,qDAQVL,EAAYQ,aAAe,CACzBN,gBAAiB,cAaJF,QChCTS,EAAS,SAAC,GAA+B,IAA7BpB,EAA4B,EAA5BA,MAAOqB,EAAqB,EAArBA,eACvB,OACE,uDAEE,6BACA,2BACEZ,KAAK,OACLT,MAAOA,EACPO,SAAU,SAACV,GAAD,OAAOwB,EAAexB,EAAEE,OAAOC,QACzCsB,YAAY,oBAKpBF,EAAOD,aAAe,CACpBI,gBAAiB,cAMJH,Q,QCuCAI,E,4MAzDbhC,MAAQ,CACNoB,SAAU,GACVa,OAAQ,I,EAEVC,SAAW,SAACjC,EAAMC,GAAW,IACnBkB,EAAa,EAAKpB,MAAlBoB,SACFe,EAAU,CACdX,GAAIY,cACJnC,OACAC,SAEFkB,EAASiB,MAAK,SAACC,GAAD,OAAaA,EAAQrC,OAASA,KACxCsC,MAAM,GAAD,OAAItC,EAAJ,4BACL,EAAKK,UAAS,SAACkC,GACb,MAAO,CACLpB,SAAS,GAAD,mBAAMoB,EAAUpB,UAAhB,CAA0Be,S,EAI5CM,cAAgB,SAACC,GACf,EAAKpC,UAAS,SAACkC,GAAD,MAAgB,CAC5BpB,SAAUoB,EAAUpB,SAASa,QAC3B,SAACE,GAAD,OAAaA,EAAQX,KAAOkB,U,EAIlCC,aAAe,SAACV,GACd,EAAK3B,SAAS,CAAE2B,Y,EAElBW,eAAiB,WAAO,IAAD,EACQ,EAAK5C,MAA1BoB,EADa,EACbA,SAAUa,EADG,EACHA,OAClB,OAAOb,EAASa,QAAO,SAACK,GAAD,OACrBA,EAAQrC,KAAK4C,cAAcC,SAASb,EAAOY,mB,uDAI7C,IAAME,EAAejC,KAAK8B,iBAC1B,OACE,oCACE,kBAAC,EAAD,CAAgBhC,cAAeE,KAAKoB,WACnCa,EAAazB,OAAS,GACrB,kBAAC,EAAD,CACEd,MAAOM,KAAKd,MAAMiC,OAClBJ,eAAgBf,KAAK6B,eAGzB,6BACCI,EAAazB,OAAS,GACrB,kBAAC,EAAD,CACEF,SAAU2B,EACV1B,gBAAiBP,KAAK2B,qB,GAnDhBvB,aCDlB8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.58f741f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ContactsEditor extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n  };\r\n  handleChange = (property) => {\r\n    return (e) => {\r\n      this.setState({ [property]: e.target.value });\r\n    };\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContacts(this.state.name, this.state.phone);\r\n\r\n    this.setState({ name: \"\", phone: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        Name\r\n        <input\r\n          value={this.state.name}\r\n          onChange={this.handleChange(\"name\")}\r\n        ></input>\r\n        Phone\r\n        <input\r\n          value={this.state.phone}\r\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n          onChange={this.handleChange(\"phone\")}\r\n        ></input>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsEditor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <>\r\n    {contacts.length ? \"Contacts\" : null}\r\n    <ul>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}:{phone}\r\n          </p>\r\n\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\nContactList.defaultProps = {\r\n  onDeleteContact: () => {},\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n        placeholder=\"Type name... \"\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.defaultProps = {\r\n  onLeaveFeedback: () => {},\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport ContactsEditor from \"./Components/Contacts/ContactsEditor\";\r\nimport ContactsList from \"./Components/ContactsList/ContactList\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  addPhone = (name, phone) => {\r\n    const { contacts } = this.state;\r\n    const Contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      phone,\r\n    };\r\n    contacts.some((contact) => contact.name === name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState((prevState) => {\r\n          return {\r\n            contacts: [...prevState.contacts, Contact],\r\n          };\r\n        });\r\n  };\r\n  deleteContact = (ContactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (Contact) => Contact.id !== ContactId\r\n      ),\r\n    }));\r\n  };\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n  getVisibleTask = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  render() {\r\n    const visibleTasks = this.getVisibleTask();\r\n    return (\r\n      <>\r\n        <ContactsEditor onAddContacts={this.addPhone} />\r\n        {visibleTasks.length > 1 && (\r\n          <Filter\r\n            value={this.state.filter}\r\n            onChangeFilter={this.changeFilter}\r\n          />\r\n        )}\r\n        <br />\r\n        {visibleTasks.length > 0 && (\r\n          <ContactsList\r\n            contacts={visibleTasks}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}